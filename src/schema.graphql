
type SuccessMessage {
  message: String
  name: String!
}

type Location {
    name: String!
    lon: Float!
    lat: Float!
    stopId: String
    arrival: Int
    departure: Int
    stopIndex: Int
    stopSequence: Int
    vertexType: String
}

type Step {
    distance: Float!
    relativeDirection: String!
    absoluteDirection: String!
    streetName: String!
    lon: Float!
    lat: Float!
}

type LegGeometry {
    points: String!
}

type Leg {
    startTime: Float!
    endTime: Float!
    departureDelay: Int!
    arrivalDelay: Int!
    realTime: Boolean!
    distance: Float!
    pathway: Boolean!
    mode: String!
    from: Location!
    to: Location!
    legGeometry: LegGeometry!
    route: String
    routeType: Int
    routeColor: String
    headsign: String
    agencyId: String
    tripId: String
    duration: Int
    transitLeg: Boolean
    steps: [Step!]
}

type Itinerary {
    duration: Int
    startTime: Float
    endTime: Float
    walkTime: Int
    transitTime: Int
    waitingTime: Int
    walkingDistance: Float
    transfers: Int
    legs: [Leg]
}

type Plan {
    date: Float
    from: Location
    to: Location
    itineraries: [Itinerary]
}

type Geometry {
    type: String!
    coordinates: [Float!]!
}

type POIProperties {
    id: String!
    layer: String!
    source: String!
    source_id: String!
    name: String!
    label: String!
    confidence: Float!
    distance: Float!
    accuracy: String!
}

type GeocodeProperties {
    id: String!
    source: String!
    source_id: String!
    layer: String!
    name: String!
    label: String!
    confidence: Float!
    distance: Float!
    accuracy: String!

    country: String!
    country_a: String!
    region: String!
    county: String!
    locality: String!
    neighbourhood: String
    continent: String!
}

type ReverseFeature {
    type: String
    geometry: Geometry
    properties: GeocodeProperties
    bbox: [Float!]
}

type POIFeature {
    type: String
    geometry: Geometry
    properties: POIProperties
}

type Query {
    hello(name: String): SuccessMessage!
    route_plan(
        date: String!,
        time: String!,
        from: String!,
        to: String!,
        arriveBy: String,
        mode: String
    ): Plan
    poi_search(text: String!): [POIFeature!]
    reverse_geo(lon: Float!, lat: Float!): [ReverseFeature!]
}

type Mutation {
    shout: SuccessMessage!
}
